unit FormularioUsuario;
{$INCLUDE 'compilador.inc'}

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIForm, FormularioCRUDMaestro, uniGUIBaseClasses,
  uniImageList, uniStatusBar, FrameBarraNavegacionPrincipal, uniGUIFrame,
  FrameBarraInformacionOrganizacionUsuario, uniButton, uniBitBtn, uniDBText,
  uniMemo, uniDBMemo, uniCheckBox, uniDBCheckBox, uniEdit, uniDBEdit, uniLabel,
  Vcl.Menus, uniMainMenu, uniMenuButton, Data.DB, FrameBarraUltimaRevision;

type
    TFrmUsuario = class(TFrmCRUDMaestro)
    lblCodigo: TUniLabel;
    txtCodigo: TUniDBEdit;
    txtUsuario: TUniDBEdit;
    lblNombresyApellidos: TUniLabel;
    txtNombresApellidos: TUniDBEdit;
    txtEmail: TUniDBEdit;
    lblElmail: TUniLabel;
    lblDocumentoNro: TUniLabel;
    txtDocumentoNro: TUniDBEdit;
    chkActivo: TUniDBCheckBox;
    lblObservacion: TUniLabel;
    txtObservacion: TUniDBMemo;
    lblContrasena: TUniLabel;
    lblContrasenaEstablecida: TUniDBText;
    btnSubirFoto: TUniBitBtn;
    btnEliminarFoto: TUniBitBtn;
    lblUsuario: TUniLabel;
    btnCambiarContrasena: TUniMenuButton;
    mnuCambiarContrasena: TUniPopupMenu;
    mnuContraseapordefecto: TUniMenuItem;
    FmeBarraUltimaRevision: TFmeBarraUltimaRevision;
    lblUltimaRevision: TUniLabel;
    txtUrev: TUniDBText;
    FmeBarraUltimaRevision1: TFmeBarraUltimaRevision;
    procedure UniFormShow(Sender: TObject);
    procedure mnuContraseapordefectoClick(Sender: TObject);
    procedure btnCambiarContrasenaClick(Sender: TObject);
    procedure UniFormActivate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

function FrmUsuario: TFrmUsuario;

implementation

{$R *.dfm}

uses
  MainModule, uniGUIApplication, DataModuleUsuario, DataModulePrincipal, UnitCodigosComunesDataModule, UnitValidarUsuario,
  FormularioUsuarioCambiarContrasena;

function FrmUsuario: TFrmUsuario;
begin
  Result := TFrmUsuario(UniMainModule.GetFormInstance(TFrmUsuario));
end;

procedure TFrmUsuario.btnCambiarContrasenaClick(Sender: TObject);
begin
  inherited;
     if DMUsuario.MSUsuario.State = dsBrowse then
  begin
      // Solo se puede cambiar contrasena de un usuarioa activo
      if DMUsuario.MSUsuarioActivo.Value = True then
      begin
        FrmUsuarioCambiarContrasena.ShowModal;
      end
      else
        begin
          MessageDlg('Solo se puede cambiar usuario activo', mtWarning, [mbOK]);
        end;

  end;
end;

procedure TFrmUsuario.mnuContraseapordefectoClick(Sender: TObject);
begin
  inherited;
  if DMUsuario.MSUsuario.State = dsBrowse then
  begin
      // Solo se puede cambiar contrasena de un usuarioa activo
      if DMUsuario.MSUsuarioActivo.Value = True then
      begin
        // 'Admin' & 'Otros Usuarios'
        if (DMUsuario.MSUsuarioNombreUsuario.Value = 'Admin') then
        begin
          CambiarContrasenaUsuarioActual('#password#', '#password#');

          MessageDlg('Cambiado con exito' + Char(13) + 'Admin', mtConfirmation, [mbOK]);
        end
        else
          begin
            CambiarContrasenaUsuarioActual('123456', '123456');

            MessageDlg('Cambiado con exito' + Char(13) + 'Por defecto 123456', mtConfirmation, [mbOK]);
          end;
      end
      else
        begin
          MessageDlg('Solo puede cambiar contrasena usuario activo', mtConfirmation, [mbOK]);
        end;


  end;
end;

procedure TFrmUsuario.UniFormActivate(Sender: TObject);
begin
  inherited;
 DMUsuario.EnviadoDesdeFrm := Self.Name;
end;

procedure TFrmUsuario.UniFormShow(Sender: TObject);
begin
  inherited;
  IrUltimoRegistro(DMUsuario.MSUsuario, Self);
end;

end.
